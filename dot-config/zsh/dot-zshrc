# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi


# PROMPT!

# Better 'time' command
TIMEFMT=$'\n================\nuser\t%*Us\nsystem\t%*Ss\ntotal\t%*Es'

# Plugin-config
bindkey '^ ' autosuggest-accept
# See https://stackoverflow.com/questions/16359878/how-to-map-shift-enter
bindkey '^[[13;5u' autosuggest-execute #Maps to CTRL+Enter
bindkey '^N' autosuggest-clear


# Source config-files:
source "$ZDOTDIR/aliases.zsh"
source "$ZDOTDIR/functions.zsh"



### See https://salferrarello.com/zsh-git-status-prompt/
# Autoload zsh add-zsh-hook and vcs_info functions (-U autoload w/o substition, -z use zsh style)
autoload -Uz add-zsh-hook vcs_info
# Enable substitution in the prompt.
setopt prompt_subst
# Run vcs_info just before a prompt is displayed (precmd)
add-zsh-hook precmd vcs_info
# add ${vcs_info_msg_0} to the prompt
# e.g. here we add the Git information in red  
### Git-prompt from webpage
# PROMPT='%1~ %F{red}${vcs_info_msg_0_}%f %# '
### Old prompt without git:
# PROMPT='%F{green}[%F{white}%B%3~%b%F{green}]%(!.#.$) %f'

### New prompt. Explanation:
### General info
# Literal characters ([, ], $): Just insert literal text
# %-sign: Indicates a command
### Specific values
# %n		Username
# %m		Hostname
# %j		The number of jobs currently managed by the shell.
# %L		The current value of the $SHLVL variable.
# %T		The current time in 24-hour format.
# %r		Show current time in a 12-hour format with seconds.
# %D		Show the date in "yyyy-mm-dd" format.
# %3~		Show directory + up to 2 up, with ~ for home-directory
### Commands
# %F{<color>}		Sets color of next term
# %B...%b		Bold texst in between
# %U...%u		Underline
# %S...%s		Highlight
# %K{<color>...%k	Change background color
# PROMPT="%L"
NEWLINE=$'\n'	# Lul, doesn't work with "\n", need single-quotes
# PROMPT='%1~ %F{red}${vcs_info_msg_0_}%f %# '
# %(!.#.$)
# PROMPT="%F{green}[%F{white}%B%3~%b%F{green}] %F{red}${vcs_info_msg_0_}%f %# "
# 󰉋
# PROMPT='%F{cyan}%B%3~%b%f ${vcs_info_msg_0_}${NEWLINE}%F{green}%(!.#.>) %{$reset_color%}'
### Alternative starts: > (chevron), 
PROMPT='%F{cyan}%B%3~%b%f${vcs_info_msg_0_} %F{green}%(!.#.)%f '

# Enable checking for (un)staged changes, enabling use of %u and %c
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:git*:*' get-revision true
# Set custom strings for an unstaged vcs repo changes (*) and staged changes (+)
zstyle ':vcs_info:git*:*' check-for-staged-changes true
zstyle ':vcs_info:*' unstagedstr '*' # or *. Unstracked or unstaged
zstyle ':vcs_info:*' stagedstr '+' # or + or ✓. Staged changes
# Set the format of the Git information for vcs_info


zstyle ':vcs_info:git*+set-message:*' hooks git-untracked

+vi-git-untracked() {
    # if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
        git status --porcelain | grep -q '^?? '
    if [[ -n "$(git ls-files --others --exclude-standard 2>/dev/null | head -n1)" ]]; then
    # then
        hook_com[misc]+='?'  # Untracked files symbol
    fi
}

# %%b for closing bold, because %b is branch
zstyle ':vcs_info:git:*' formats       ' %F{#d891ef} %b%f %F{red}%B%m%u%c%%b%f'
zstyle ':vcs_info:git:*' actionformats '(%b|%a%u%c)'



# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
# [[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh


eval "$(direnv hook zsh)"
# vim: filetype=zsh
